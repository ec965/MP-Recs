{"version":3,"sources":["dataTable/userinfo.js","dataTable/pagecontrols.js","dataTable/row/skeleton.js","dataTable/row/hoverpopover.js","dataTable/row/index.js","dataTable/head.js","dataTable/index.js","tabs.js","form/tooltip.js","form/field.js","form/checkbox.js","form/select.js","form/index.js","spinner.js","app.js","index.js"],"names":["UserInformation","props","member","Toolbar","Grid","container","direction","alignContent","item","Link","href","url","target","Typography","variant","name","flashGrade","projectGrade","useStyles","makeStyles","tablePageControl","flexShrink","TablePageControls","classes","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","e","disabled","Math","ceil","max","root","width","day","WeatherInfoSkeleton","justify","alignItems","spacing","xs","Skeleton","style","height","borderRadius","theme","popover","pointerEvents","paper","padding","HoverPopover","React","useState","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","onMouseEnter","currentTarget","onMouseLeave","children","Popover","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","note","noteVariant","note2","locationList","maxHeight","overflow","locationListItem","tableCellData","marginRight","marginLeft","ButtonLinks","locationArr","lat","lon","Button","backgroundColor","color","length","DayWeatherInfo","tempHighNote","tempLowNote","src","icon","alt","boxShadow","maxWidth","tempHigh","tempLow","RouteTableRow","align","route","setOpen","setWeatherError","weather","setWeather","locationArray","location","starURL","slice","getWeather","fetchString","latitude","longitude","console","log","fetch","then","res","json","data","properties","forecast","dispWeather","offset","periods","isDaytime","temperature","shortForecast","i","substring","error","catch","Fragment","TableRow","hover","key","TableCell","component","scope","size","imgMedium","imgSqSmall","fontSize","rating","stars","starVotes","toDo","List","dense","map","loc","index","ListItem","ListItemText","primary","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","Box","margin","direciton","tableCellHeading","RouteTableHead","headerRowNames","orderBy","order","onRequestSort","TableHead","heading","sortDirection","TableSortLabel","active","property","event","label","marginTop","tableContainer","ascCompare","a","b","getComparator","objSort","array","comparator","sort","RouteTable","recList","handleChangePage","handleChangeRowsPerPage","setOrder","setOrderBy","Paper","TableContainer","Table","TableBody","TableFooter","TablePagination","rowsPerPageOptions","value","labelRowsPerPage","SelectProps","native","onChangeRowsPerPage","ActionsComponent","TabPanel","role","hidden","IconTabs","handleChange","tab0","hideTab0","tab1","hideTab1","AppBar","position","Tabs","onChange","centered","Tab","ColorTooltip","withStyles","tooltip","palette","light","typography","pxToRem","Tooltip","StyleTooltip","show","placement","arrow","title","UserFormikField","useField","field","meta","showToolTip","TextField","autoComplete","touched","helperText","rememberMe","UserFormikCheckbox","type","FormControlLabel","labelPlacement","control","Checkbox","UserFormikSelect","val","setVal","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","menuItems","String","FormHelperText","paddingLeft","paddingRight","marginBottom","button","locationButton","info","main","FormikForm","handleFormSubmit","huecoGrades","enableReinitialize","initialValues","email","localStorage","getItem","distance","maxResults","validationSchema","Yup","required","min","positive","integer","onSubmit","values","setFieldValue","navigator","geolocation","getCurrentPosition","coords","warn","code","message","alert","LoadingSpinner","CircularProgress","App","state","apiKey","JSON","parse","fetchError","getUser","getTicks","getRoutes","getRoutesForLatLon","getToDos","apiError","currentTab","currentPage","loading","haveResults","bind","handleChangeTab","newValue","this","setState","newPage","parseInt","setSubmitting","toString","stringify","getName","getClimbs","setItem","clear","response","success","routeList","routeListIndex","tickList","ticks","routeId","gradeArray","Array","fill","routes","includes","gradeStart","indexOf","grade","gradeInt","isNaN","mostGrade","highestGrade","tickListIdSet","Set","add","has","splice","ratingArr","split","swp","join","replace","dataRouteList","toDoSet","toDos","minHeight","PureComponent","createMuiTheme","fontFamily","blueGrey","secondary","deepPurple","Root","CssBaseline","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54703d8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// const useStyles=makeStyles({\r\n//   root:{\r\n//     marginTop: 20,\r\n//     // marginBottom: 10,\r\n//     paddingTop: 10,\r\n//     paddingBottom: 10,\r\n//     paddingRight: 16,\r\n//     paddingLeft: 16,\r\n//   },\r\n// });\r\n\r\nexport default function UserInformation(props){\r\n  // let memberDate = new Date(props.memberSince);\r\n  const { member } = props\r\n  // const classes=useStyles();\r\n  \r\n  return(\r\n    <Toolbar>\r\n      <Grid container\r\n        direction=\"column\"\r\n        alignContent=\"flex-start\"\r\n      >\r\n        <Grid item>\r\n          <Link href={member.url} target=\"_blank\">\r\n            <Typography variant=\"h5\">{member.name}</Typography>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Typography align=\"center\" variant=\"subtitle2\">Member since: {memberDate.toDateString().substring(3)}</Typography> */}\r\n          {/* <Typography align=\"center\" variant=\"subtitle1\">Rating Recommendation: V{props.flashGrade} - V{props.projectGrade}</Typography> */}\r\n          <Typography variant=\"subtitle1\">(V{props.flashGrade} - V{props.projectGrade})</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Toolbar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//icons\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\n\r\nconst useStyles=makeStyles({\r\n  tablePageControl:{\r\n    flexShrink: 0,\r\n  },\r\n});\r\n\r\nexport default function TablePageControls(props){\r\n  const classes=useStyles();\r\n  //this way we can see all props at the top of the component\r\n  const { count, page, rowsPerPage, onChangePage } = props; \r\n  \r\n  function handleFirstPage(e){\r\n    onChangePage(e, 0);\r\n  }\r\n\r\n  function handlePrevPage(e){\r\n    onChangePage(e, page - 1);\r\n  }\r\n\r\n  function handleNextPage(e){\r\n    onChangePage(e, page + 1);\r\n  }\r\n\r\n  function handleLastPage(e){\r\n    onChangePage(e, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return(\r\n    <div className={classes.tablePageControl}>\r\n      <IconButton\r\n        onClick={handleFirstPage}\r\n        disabled={page===0}\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handlePrevPage}\r\n        disabled={page === 0}\r\n      >\r\n        <KeyboardArrowLeft/>\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextPage}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) -1}\r\n      >\r\n        <KeyboardArrowRight/>\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPage}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) -1}\r\n      >\r\n        <LastPageIcon/>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePageControls.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles=makeStyles({\r\n  root:{\r\n    width: '7ch'\r\n  },\r\n  day:{\r\n    width: '5ch'\r\n  }\r\n});\r\n\r\nexport default function WeatherInfoSkeleton(){\r\n  const classes=useStyles();\r\n  return(\r\n    <Grid container \r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      direction=\"column\"\r\n      spacing={1}\r\n    >\r\n      <Grid item xs>\r\n        <Skeleton \r\n          variant=\"rect\" \r\n          style={{\r\n            width: '3em',\r\n            height: '3em',\r\n            borderRadius:'10px',\r\n        }}/>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Skeleton className={classes.day}/>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Skeleton className={classes.root}/>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n      pointerEvents: 'none',\r\n    },\r\n  paper: {\r\n      padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function HoverPopover(props){\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n  const handlePopoverOpen = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = (e) => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  \r\n  return(\r\n    <div>\r\n      <div\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        {props.children}\r\n      </div>\r\n      <Popover\r\n        id=\"hover-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Grid container \r\n          direction=\"column\"\r\n          spacing={1}\r\n        >\r\n          {props.note!=='' &&\r\n          (<Grid item>\r\n            <Typography variant={props.noteVariant}>\r\n              {props.note}\r\n            </Typography>\r\n          </Grid>)}\r\n\r\n          {props.note2 && (<Grid item>\r\n            {props.note2}\r\n          </Grid>)}\r\n        </Grid>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n//MUI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n//icons\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n//css\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\n//my stuff\r\nimport WeatherInfoSkeleton from './skeleton';\r\nimport HoverPopover from './hoverpopover';\r\n\r\nconst useStyles=makeStyles({\r\n  locationList:{\r\n    maxHeight: 120,\r\n    width: '90%', \r\n    overflow: 'auto',\r\n  },\r\n  locationListItem:{\r\n    // textAlign: \"justify\",\r\n  },\r\n  tableCellData:{\r\n    // border: \"groove\",\r\n    padding: 10,\r\n    marginRight: 6,\r\n    marginLeft: 6,\r\n  },\r\n});\r\n\r\nfunction ButtonLinks(props){\r\n  const { name, locationArr, lat, lon  } = props;\r\n  return(\r\n    \r\n    <Grid container item\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Button \r\n          variant=\"contained\" \r\n          style={{backgroundColor:'#d32f2f', color:'#fff'}} \r\n          href={'https://www.youtube.com/results?search_query='\r\n            + name + '+'\r\n            + locationArr[locationArr.length-1] + '+'\r\n            + locationArr[locationArr.length-2]}\r\n          target=\"_blank\"\r\n        >\r\n          YouTube\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button          \r\n          href={'https://vimeo.com/search?q=' + name + '+' + locationArr[locationArr.length-1] + '+' + locationArr[locationArr.length-2]}\r\n          target=\"_blank\" \r\n          variant=\"contained\" style={{backgroundColor:'#19B7EA', color:'#fff'}}\r\n        >\r\n          Vimeo\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button \r\n          variant=\"contained\" \r\n          style={{backgroundColor:'#0F9D58', color:'#fff'}}\r\n          href={'https://www.google.com/maps/@'\r\n            + lat + ',' + lon + ',18z'}\r\n          target=\"_blank\"\r\n        >\r\n          Maps\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button           \r\n          href={'https://forecast.weather.gov/MapClick.php?lon=' + lon + '&lat=' + lat}\r\n          target=\"_blank\"\r\n          variant=\"contained\" style={{backgroundColor:'#0d47a1', color:'#fff'}}>\r\n          Weather\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction DayWeatherInfo(props){\r\n  const { day } = props;\r\n  return(\r\n    <HoverPopover\r\n      noteVariant=\"body2\"\r\n      note={day.tempHighNote!==\"\" \r\n        ? 'Day: '+day.tempHighNote : ''\r\n      }\r\n      note2={<Typography variant=\"body2\">{'Night: '+day.tempLowNote}</Typography>}\r\n    >\r\n      <Grid container \r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        spacing={1}\r\n      >\r\n        <Grid item xs>\r\n          <img \r\n            src={day.icon} \r\n            alt='unavailable' \r\n            style={{\r\n              borderRadius:'10px',\r\n              boxShadow:'0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n              maxWidth:'3em'\r\n            }}\r\n          ></img>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Typography variant='body1'>\r\n            {day.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Typography variant='body2'>\r\n            {day.tempHigh!=='' \r\n              ? day.tempHigh + ' - ' + day.tempLow + '°F'\r\n              : day.tempLow + '°F'\r\n            }\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </HoverPopover>\r\n  );\r\n}\r\n\r\n\r\nexport default function RouteTableRow (props){\r\n  const classes=useStyles();\r\n  const { align, route } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [weatherError, setWeatherError] = React.useState(false);\r\n  const [weather , setWeather] = React.useState([]);\r\n  const locationArray = route.location;//.slice(2);\r\n  const starURL = route.url.slice(0,38) + 'stats/' + route.url.slice(38);\r\n\r\n  const skeletonArr = [0,1,2,3,4,5,6];\r\n  \r\n  function getWeather(){\r\n    if (weather.length === 0){\r\n      setWeather([1]);\r\n      let fetchString = 'https://api.weather.gov/points/' + route.latitude + ',' + route.longitude;\r\n      console.log('fetching weather based on lat/lon');\r\n      fetch(fetchString)\r\n        .then(res => res.json())\r\n        .then(\r\n          (data) => {\r\n            console.log('fetching weather based on grid');\r\n            fetch(data.properties.forecast)\r\n              .then( res=> res.json())\r\n              .then(\r\n                (data) => {\r\n                  \r\n                  let dispWeather = [];\r\n                  let offset=0;\r\n                  //starting on a day time\r\n                  if(data.properties.periods[0].isDaytime){\r\n                    dispWeather[0] = {\r\n                      name: 'Today',\r\n                      tempHigh: data.properties.periods[0].temperature,\r\n                      tempHighNote: data.properties.periods[0].shortForecast,\r\n                      icon: data.properties.periods[0].icon,\r\n                      tempLow: data.properties.periods[1].temperature,\r\n                      tempLowNote: data.properties.periods[1].shortForecast,\r\n                    };\r\n                  }\r\n                  //starting on a night time\r\n                  else {\r\n                    offset=1;\r\n                    dispWeather[0] = {\r\n                      name: 'Tonight',\r\n                      tempHigh: '',\r\n                      tempHighNote: '',\r\n                      icon: data.properties.periods[0].icon,\r\n                      tempLow: data.properties.periods[0].temperature,\r\n                      tempLowNote: data.properties.periods[0].shortForecast,\r\n                    };\r\n                  }\r\n\r\n                  for(let i=(2-offset); i < (data.properties.periods.length-offset) ; i+=2){\r\n                    dispWeather[(i+offset)/2]={\r\n                      name: data.properties.periods[i].name.substring(0,3),\r\n                      tempHigh: data.properties.periods[i].temperature,\r\n                      tempHighNote: data.properties.periods[i].shortForecast,\r\n                      icon: data.properties.periods[i].icon,\r\n                      tempLow: data.properties.periods[i+1].temperature,\r\n                      tempLowNote: data.properties.periods[i+1].shortForecast,\r\n                    };\r\n                  }\r\n                  console.log(dispWeather);\r\n                  setWeather(dispWeather);\r\n                },\r\n                (error) => {\r\n                  setWeatherError(true);\r\n                }\r\n              )\r\n              .catch(console.error);\r\n            },\r\n            (error) => {\r\n              setWeatherError(true);\r\n            }\r\n        )\r\n        .catch(console.error);\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <TableRow hover={true} key={route.id} onClick={()=>{setOpen(!open); getWeather();}}>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <IconButton size=\"small\" onClick={()=>{setOpen(!open); getWeather();}}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon/>}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell className={classes.tableCellData} align={align}>\r\n          <Link href={route.imgMedium} target=\"_blank\">\r\n            {route.imgSqSmall===''\r\n              ? <ImageIcon fontSize=\"large\" color='secondary' style={{width:'100px', height:'100px'}}/>\r\n              : <img src={route.imgSqSmall} alt=\"Unavailable\" ></img>\r\n            }\r\n          </Link>\r\n        </TableCell>\r\n        <TableCell className={classes.tableCellData} align={align} >\r\n          <Link href={route.url} target=\"_blank\">{route.name}</Link>\r\n        </TableCell>\r\n        <TableCell className={classes.tableCellData} align={align}>{route.rating}</TableCell>\r\n        <TableCell className={classes.tableCellData} align={align}>\r\n          <Link href={starURL} target=\"_blank\">\r\n            <StarIcon style={{fontSize:12}}/>{route.stars} / {route.starVotes}\r\n          </Link>\r\n        </TableCell>\r\n        <TableCell className={classes.tableCellData} align={align}>\r\n          {route.toDo\r\n            ? <CheckIcon/>\r\n            : <ClearIcon/>                   \r\n          }\r\n        </TableCell>\r\n        <TableCell className={classes.tableCellData} align={align}>\r\n          <List className={classes.locationList} dense>\r\n          {locationArray.map((loc,index) => (\r\n            <ListItem key={index}>\r\n              <ListItemText className={classes.locationListItem} primary={loc}/>\r\n            </ListItem>\r\n          ))}\r\n          </List>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0}} colSpan={7}>\r\n          <Collapse in={open} timeout=\"auto\">\r\n            <Box margin={1}>\r\n              <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignContent=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <ButtonLinks\r\n                    name={route.name}\r\n                    locationArr={route.location}\r\n                    lat={route.latitude}\r\n                    lon={route.longitude}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid container\r\n                    direciton=\"row\"\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignContent=\"center\"\r\n                  >\r\n                    {weather[0]===1 && (\r\n                      <>\r\n                        {skeletonArr.map((index)=>(\r\n                          <Grid key={index} item><WeatherInfoSkeleton/></Grid>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n                    {(weather[0]!==1) && (\r\n                      <React.Fragment>\r\n                        {weather.map(( day, index) => (\r\n                          <Grid item key={index}>\r\n                            < DayWeatherInfo day={day}/>\r\n                          </Grid>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\n\r\nconst useStyles=makeStyles({\r\n  tableCellHeading:{\r\n    padding:10,\r\n    marginRight: 6,\r\n    marginLeft: 6,\r\n  },\r\n});\r\n\r\nexport default function RouteTableHead(props){\r\n  const classes=useStyles();\r\n  const { align, headerRowNames, orderBy, order, onRequestSort } = props;\r\n  \r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  \r\n  return(\r\n    <TableHead>\r\n      <TableRow>\r\n        {props.children}\r\n        {headerRowNames.map((heading) => (\r\n          <TableCell \r\n            key={heading.id} \r\n            className={classes.tableCellHeading} \r\n            align={align}\r\n            sortDirection={orderBy === heading.id ? order : false}\r\n          >\r\n            {heading.id!=='image' \r\n              ? \r\n              (<TableSortLabel\r\n                active={orderBy === heading.id}\r\n                direction={orderBy === heading.id ? order : 'asc'}\r\n                onClick={createSortHandler(heading.id)}\r\n              >\r\n                {heading.label}\r\n              </TableSortLabel>)\r\n              :\r\n              (<>{heading.label}</>)\r\n            }\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import React from 'react';\r\n//MUI\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n//mystuff\r\nimport UserInformation from './userinfo';\r\nimport TablePageControls from './pagecontrols';\r\nimport RouteTableRow from './row/index';\r\nimport RouteTableHead from './head';\r\n//css\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\n\r\nconst useStyles=makeStyles({\r\n  root:{\r\n    marginTop: 20,\r\n    paddingTop:10,\r\n  },\r\n  tableContainer:{\r\n  },\r\n});\r\n\r\n//sorting functions\r\n//compare ascending\r\nfunction ascCompare(a, b, orderBy){\r\n  if( a[orderBy] > b[orderBy] ){\r\n    return 1;\r\n  }\r\n  else if( a[orderBy] < b[orderBy] ){\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy){\r\n  return order === 'asc'\r\n    ? (a,b) => ascCompare(a, b, orderBy)\r\n    : (a,b) => -ascCompare(a, b, orderBy);\r\n}\r\n\r\nfunction objSort( array, comparator ){\r\n  return array.sort(comparator);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function RouteTable(props){\r\n  const { align, recList, page, rowsPerPage, handleChangePage, handleChangeRowsPerPage,\r\n    member, flashGrade, projectGrade\r\n  } = props;\r\n  const classes=useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n\r\n  const handleRequestSort = (event, property) =>{\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  }\r\n  \r\n  const headerRow = [\r\n    { id: 'image', label: 'Image'}, \r\n    { id: 'name', label: 'Name'}, \r\n    { id: 'rating', label: 'Rating'}, \r\n    { id: 'stars', label: 'Stars / Votes'}, \r\n    { id: 'toDo', label: 'To Do'}, \r\n    { id: 'location', label: 'Location'},\r\n  ];\r\n\r\n  return(\r\n    <Paper className={classes.root}>\r\n      <UserInformation\r\n        member={member}\r\n        flashGrade={flashGrade}\r\n        projectGrade={projectGrade}\r\n      />\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table size='small' padding='none'>\r\n          <RouteTableHead\r\n            headerRowNames={headerRow}\r\n            align={align}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n          > \r\n          {/*null cell for the drop down button column*/}\r\n            <TableCell scope=\"row\" component=\"th\" />\r\n          </RouteTableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? objSort(recList, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : objSort(recList, getComparator(order, orderBy))\r\n            ).map((route) => (\r\n              <RouteTableRow align={align} key={route.id} route={route}/>\r\n            ))}\r\n\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5,10,25,50, {label: 'All', value: -1}]}\r\n                count={recList.length}\r\n                rowsPerPage={rowsPerPage}\r\n                labelRowsPerPage={'Routes / page'}\r\n                page={page}\r\n                SelectProps={{\r\n                  native:true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePageControls}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props){\r\n  return(\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={props.value !== props.index}\r\n      id={'simple-tabpanel' + props.index}\r\n    >\r\n      {props.value===props.index && (\r\n        <Box>\r\n          {props.children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function IconTabs(props){\r\n  const { \r\n    value, \r\n    handleChange, \r\n    tab0, \r\n    hideTab0, \r\n    tab1, \r\n    hideTab1 \r\n  } = props;\r\n  \r\n  return(\r\n    <div>\r\n      <AppBar position=\"sticky\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          // indicatorColor=\"primary\"\r\n          // textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab icon={<SearchIcon/>} label=\"SEARCH\" disabled={hideTab0}/>\r\n          <Tab icon={<ListIcon/>} label=\"CLIMBS\" disabled={hideTab1} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        {tab0}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {tab1}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst ColorTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: '#fff',\r\n    // maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(14),\r\n    // border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\n\r\nexport default function StyleTooltip(props){\r\n  return (\r\n    <React.Fragment>\r\n      {props.show ?\r\n        <ColorTooltip placement='top' arrow title={props.title}>{props.children}</ColorTooltip>\r\n        : <> {props.children}</>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport StyleTooltip from './tooltip';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function UserFormikField (props){\r\n  const [field, meta] = useField(props);\r\n\r\n  return(\r\n    <StyleTooltip title={props.note} show={props.showToolTip}>\r\n    <TextField\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      id={props.id}\r\n      label={props.label}\r\n      name={props.name}\r\n      autoComplete={props.autoComplete}\r\n      //error handeling\r\n      error={meta.touched && meta.error}\r\n      helperText={meta.touched && meta.error \r\n        ? meta.error: ' '}\r\n      \r\n      {...field}\r\n    />\r\n    </StyleTooltip>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StyleTooltip from './tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useField } from 'formik';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rememberMe:{\r\n      marginTop: 5,\r\n      marginLeft: 5,\r\n      fontSize: 99,\r\n    },\r\n}));\r\n\r\nexport default function UserFormikCheckbox(props){\r\n  const classes=useStyles();\r\n  const { name, id, label } = props;\r\n  const [field, meta] = useField({...props, type: 'checkbox'});\r\n    \r\n  return(\r\n      <FormControlLabel \r\n        className={classes.rememberMe}\r\n        labelPlacement=\"start\"  \r\n        control={\r\n        <StyleTooltip title={props.note} arrow show={props.showToolTip}>\r\n          <Checkbox\r\n            id={name}\r\n            name={id}\r\n            color=\"primary\"\r\n            {...field}\r\n          />\r\n        </StyleTooltip>\r\n        }\r\n        label={label}\r\n      />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport PropTypes from 'prop-types';\r\nimport { useField } from 'formik';\r\n\r\nfunction UserFormikSelect(props){\r\n  const[ field, meta ] = useField({...props})\r\n  const [val, setVal] = React.useState('');\r\n  \r\n  const handleChange = (e) => {\r\n    setVal(e.target.value)\r\n  };\r\n\r\n  return(\r\n    <FormControl \r\n      fullWidth \r\n      error={meta.touched && meta.error} \r\n      size=\"small\" \r\n    >\r\n      <InputLabel id={props.id + '-label'}>{props.label}</InputLabel>\r\n      <Select\r\n        labelId={props.id + '-label'}\r\n        id={props.id}\r\n        name={props.name}\r\n        value={val}\r\n        onChange={handleChange}\r\n        {... field}\r\n      >\r\n        <MenuItem value={-1}><em>Find my grade</em></MenuItem>\r\n        { props.menuItems.map((item, index)=> (\r\n          <MenuItem key={index} value={item}>{'V' + String(item)}</MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>{meta.touched && meta.error\r\n        ? meta.error\r\n        : ' '}\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nUserFormikSelect.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  menuItems: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default UserFormikSelect;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//Formik\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n//icons\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//mystuff\r\nimport StyleTooltip from './tooltip';\r\nimport UserFormikField from './field';\r\nimport UserFormikCheckbox from './checkbox';\r\nimport UserFormikSelect from './select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  note:{\r\n    marginRight : 10,\r\n    marginBottom: 0,\r\n    paddingBottom:0,\r\n  },\r\n  button:{\r\n    // margin:,\r\n  },\r\n  locationButton:{\r\n    color: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nexport default function FormikForm (props){\r\n  const classes=useStyles();\r\n  const {\r\n    handleFormSubmit\r\n  } = props;\r\n\r\n  \r\n  const huecoGrades = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];\r\n  \r\n  return(\r\n    <Paper className={classes.root}>\r\n      <Formik\r\n        enableReinitialize={true}\r\n      //will try to load values from local storage, or else just init with null values\r\n      //change these values back to null, just api json for testing\r\n        initialValues={{\r\n          email: localStorage.getItem('email') || '',//apiKey.email, \r\n          // apiKey: localStorage.getItem('apiKey') || apiKey.key,\r\n          rememberMe: localStorage.getItem('rememberMe') === 'true' || false,    \r\n          lat: localStorage.getItem('lat') || '' ,//apiKey.lat || ,\r\n          lon: localStorage.getItem('lon') || '' ,//apiKey.lon,\r\n          distance: localStorage.getItem('distance') || '' , /*apiKey.distance ||*/\r\n          maxResults: localStorage.getItem('maxResults')|| '' ,\r\n          flashGrade: localStorage.getItem('flashGrade') || '' ,\r\n          projectGrade: localStorage.getItem('projectGrade') || '',                    \r\n        }}\r\n\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email(\"This isn't an email\")\r\n            .required('Required'),\r\n          // apiKey: Yup.string()\r\n          //   .required('Required'),\r\n          lat: Yup.number()\r\n            .required('Required')\r\n            .min(-90,'Too lateral, enter a higher number')\r\n            .max(90, 'Too lateral, enter a lower number'),\r\n          lon: Yup.number()\r\n            .required('Required')\r\n            .min(-180, 'Too long, enter a higher number')\r\n            .max(180, 'Too long, enter a lower number'),\r\n          distance: Yup.number()\r\n            .required('Required')\r\n            .positive(\"Distance isn't negative\")\r\n            .max(200, 'Choose a shorter distance'),\r\n          maxResults: Yup.number()\r\n            .required('Required')\r\n            .integer()\r\n            .max(500, 'Choose less results'),\r\n          flashGrade: Yup.number()\r\n            .required('Required')\r\n            .positive()\r\n            .min(-1,'Hueco grades go from V0-V17'),\r\n          projectGrade: Yup.number()\r\n            .required('Required')\r\n            .integer()\r\n            .max(17, 'Hueco grades go from V0-V17'),\r\n          })}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          setFieldValue,\r\n        }) => \r\n          (\r\n      \r\n        <Form autoComplete=\"on\">\r\n          <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Typography variant=\"h5\">\r\n              Boulder Field\r\n            </Typography>\r\n            <Grid container item \r\n              direction=\"row\" \r\n              justify=\"flex-start\" \r\n              alignItems=\"center\"\r\n              alignContent=\"flex-start\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs>\r\n                  <UserFormikField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    autoComplete=\"email\"\r\n                    showToolTip\r\n                    note=\"Enter your Mountain Project email\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <StyleTooltip\r\n                  title=\"Get my latitude and longitude\" show >\r\n                  <IconButton className={classes.locationButton} \r\n                    onClick={()=>{\r\n\r\n                      function getLocSuccess(position){\r\n                        console.log(position.coords);\r\n                        setFieldValue('lat', position.coords.latitude);\r\n                        setFieldValue('lon', position.coords.longitude);\r\n                      }\r\n\r\n                      function getLocError (error){\r\n                        console.warn(`ERROR(${error.code}): ${error.message}`);\r\n                      }\r\n                      \r\n                      if(navigator.geolocation){\r\n                        navigator.geolocation.getCurrentPosition(getLocSuccess, getLocError);\r\n                      }\r\n                      else{\r\n                        alert('Geolocation is not supported on your browser.')\r\n                      }\r\n                    }}\r\n                  >\r\n                    <MyLocationIcon/>\r\n                  </IconButton>\r\n                </StyleTooltip>\r\n              </Grid>\r\n              {/* <Grid item> */}\r\n              {/*   <UserFormikField */}\r\n              {/*     id=\"apiKey\" */}\r\n              {/*     name=\"apiKey\" */}\r\n              {/*     label=\"API Key\" */}\r\n              {/*   /> */}\r\n              {/* </Grid> */}\r\n            </Grid>\r\n            <Grid container item \r\n              direction=\"row\" \r\n              justify=\"center\" \r\n              alignItems=\"center\"\r\n              alignContent=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs>\r\n                <UserFormikField\r\n                  id=\"lat\"\r\n                  name=\"lat\"\r\n                  label=\"Latitude\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <UserFormikField\r\n                  id=\"lon\"\r\n                  name=\"lon\"\r\n                  label=\"Longitude\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item \r\n              direction=\"row\" \r\n              justify=\"flex-start\" \r\n              alignItems=\"center\"\r\n              alignContent=\"flex-start\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs>\r\n                <UserFormikField\r\n                  id=\"distance\"\r\n                  name=\"distance\"\r\n                  label=\"Distance (miles)\"\r\n                  showToolTip\r\n                  note=\"Search radius\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <UserFormikField\r\n                  id=\"maxResults\"\r\n                  name=\"maxResults\"\r\n                  label=\"Number of Results\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item \r\n              direction=\"row\" \r\n              justify=\"flex-start\" \r\n              alignItems=\"center\"\r\n              alignContent=\"flex-start\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs>\r\n                <UserFormikSelect\r\n                  id='flashGrade'\r\n                  name='flashGrade'\r\n                  label='Flash Grade'\r\n                  menuItems={huecoGrades}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <UserFormikSelect\r\n                  id='projectGrade'\r\n                  name='projectGrade'\r\n                  label='Project Grade'\r\n                  menuItems={huecoGrades}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item \r\n              direction=\"row\" \r\n              justify=\"center\" \r\n              alignItems=\"center\" \r\n              alignContent=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs>\r\n                <UserFormikCheckbox\r\n                  name=\"rememberMe\"\r\n                  id=\"rememberMe\"\r\n                  label=\"Remember Me\"\r\n                  note=\"All data is stored locally on your device\"\r\n                  showToolTip\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  className={classes.button}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n          )}\r\n      </Formik>\r\n        {/* <Grid container */} \r\n        {/*   direction=\"row\" */} \r\n        {/*   justify=\"flex-end\" */} \r\n        {/*   alignItems=\"flex-end\" */} \r\n        {/*   spacing={3} */}\r\n        {/* > */}\r\n        {/*   <Grid item className={classes.note}> */}\r\n        {/*     <Typography variant='caption'> */}\r\n        {/*       <Link href='https://www.mountainproject.com/data' target=\"_blank\"> */}\r\n        {/*         Find my Mountain Project API key */}\r\n        {/*       </Link> */}\r\n        {/*     </Typography> */}\r\n        {/*   </Grid> */}\r\n        {/* </Grid> */}\r\n    </Paper>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles=makeStyles({\r\n  root:{\r\n    margin: '2em',\r\n  },\r\n});\r\n\r\nexport default function LoadingSpinner(props){\r\n  const classes=useStyles();\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <CircularProgress className={classes.root} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport apiKey from './apiKey.json';\r\n//material UI\r\nimport Grid from '@material-ui/core/Grid';\r\n//my stuff\r\nimport RouteTable from './dataTable/index'; \r\nimport IconTabs from './tabs'; \r\nimport FormikForm from './form/index'; \r\nimport LoadingSpinner from './spinner'; \r\n//CSS dependencies\r\n\r\nexport default class App extends React.PureComponent{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n     \r\n      //form inputs\r\n      email: '',\r\n      apiKey: apiKey.key,\r\n      rememberMe: null, \r\n      lat: null,\r\n      lon: null,\r\n      distance: null,\r\n      maxResults: null,\r\n\r\n      //things to fetch\r\n      member: JSON.parse(localStorage.getItem('member')) || '', \r\n\r\n      recList: JSON.parse(localStorage.getItem('recList')) || [],\r\n      flashGrade: localStorage.getItem('flashGrade') || 0,\r\n      projectGrade: localStorage.getItem('projectGrade') || 17,\r\n\r\n      //fetch error vars\r\n      fetchError: {\r\n        getUser: null,\r\n        getTicks: null,\r\n        getRoutes: null,\r\n        getRoutesForLatLon: null,\r\n        getToDos: null,\r\n        weather: null,\r\n      },\r\n\r\n      apiError: {\r\n        getUser: null,\r\n        getTicks: null,\r\n        getRoutes: null,\r\n        getRoutesForLatLon: null,\r\n        getToDos:null,\r\n      },\r\n      \r\n      currentTab: 0,  //change this back to zero before release\r\n\r\n      //Results (dataTable.js) state controllers\r\n      currentPage: 0,\r\n      rowsPerPage: 5,\r\n\r\n      //control loading spinner (loading.js)\r\n      loading: false,\r\n      //boolean to enable the results tab\r\n      haveResults: (localStorage.getItem('haveResults')==='true') || false,\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleChangeTab = this.handleChangeTab.bind(this);\r\n    this.handleChangePage = this.handleChangePage.bind(this);\r\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n  }\r\n\r\n  //Tab state controller (tabs.js)\r\n  handleChangeTab(event, newValue){\r\n    this.setState({ currentTab : newValue });\r\n  };\r\n\r\n  //Results (dataTable.js) state controlers\r\n  handleChangePage(e, newPage){\r\n    //disable jumping to the top of the page on new page\r\n    // window.scrollTo(0,0);\r\n    this.setState({currentPage: newPage});\r\n  }\r\n  \r\n  handleChangeRowsPerPage(e){\r\n    this.setState({ \r\n      rowsPerPage : parseInt(e.target.value, 10),\r\n      currentPage: 0, \r\n    });\r\n  }\r\n\r\n  /////------------------------------------------------\r\n  //Form (form.js) state controllers\r\n  handleFormSubmit(values, {setSubmitting }){\r\n    console.log(\"submit button clicked\");\r\n    \r\n    this.setState({\r\n      loading:true\r\n    });\r\n    \r\n    this.setState({\r\n      email: values.email,\r\n      rememberMe: values.rememberMe,\r\n      lat: values.lat,\r\n      lon: values.lon,\r\n      distance: values.distance,\r\n      maxResults: values.maxResults,\r\n      flashGrade: values.flashGrade,\r\n      projectGrade: values.projectGrade,\r\n    });\r\n    //}, ()=>console.log('state:',this.state));\r\n    \r\n    console.log('local storage bool', \r\n      (localStorage.getItem('email')!==this.state.email),\r\n      (localStorage.getItem('rememberMe')!==this.state.rememberMe.toString()),\r\n      (localStorage.getItem('lat')!==this.state.lat),\r\n      (localStorage.getItem('lon')!==this.state.lon),\r\n      (localStorage.getItem('distance')!==this.state.distance),\r\n      (localStorage.getItem('maxResults')!==this.state.maxResults),\r\n      (localStorage.getItem('member')!==JSON.stringify(this.state.member)),\r\n      (localStorage.getItem('flashGrade')!==this.state.flashGrade.toString()),\r\n      (localStorage.getItem('projectGrade')!==this.state.projectGrade.toString())\r\n    )\r\n    //if anything is different in local storage then fetch data again.\r\n    if( \r\n      (localStorage.getItem('email')!==this.state.email)||\r\n      (localStorage.getItem('rememberMe')!==this.state.rememberMe.toString())||\r\n      (localStorage.getItem('lat')!==this.state.lat)||\r\n      (localStorage.getItem('lon')!==this.state.lon)||\r\n      (localStorage.getItem('distance')!==this.state.distance)||\r\n      (localStorage.getItem('maxResults')!==this.state.maxResults)||\r\n      (localStorage.getItem('member')!==JSON.stringify(this.state.member))||\r\n      (localStorage.getItem('flashGrade')!==this.state.flashGrade.toString())||\r\n      (localStorage.getItem('projectGrade')!==this.state.projectGrade.toString())\r\n    ){\r\n      this.getName();\r\n      this.getClimbs();\r\n    }\r\n    else{\r\n      //after after all data is loaded, go to the new tab\r\n      //enable tab1 navigation after data is retrieved\r\n      this.setState({ \r\n        currentTab : 1,\r\n        haveResults: true,\r\n        loading: false,\r\n      });\r\n    }\r\n\r\n    //if rememberMe then store everything into local storage\r\n    //these same instructions are called within getName and getClimbs b/c of a-sync\r\n    if( this.state.rememberMe ){\r\n      localStorage.setItem( 'email', this.state.email );\r\n      localStorage.setItem( 'rememberMe', this.state.rememberMe);\r\n      localStorage.setItem( 'lat', this.state.lat);\r\n      localStorage.setItem( 'lon', this.state.lon);\r\n      localStorage.setItem( 'distance', this.state.distance );\r\n      localStorage.setItem( 'maxResults', this.state.maxResults );\r\n      localStorage.setItem( 'haveResults', this.state.haveResults );\r\n    }\r\n    else{\r\n      localStorage.clear();\r\n    }\r\n\r\n    setSubmitting(false);    \r\n  }\r\n  \r\n  \r\n  ////-------------------------------------------------------- \r\n  //API call/ functions\r\n  getName(){\r\n    fetch('https://www.mountainproject.com/data/get-user?email='+ this.state.email +'&key=' + this.state.apiKey)\r\n      .then(response => response.json())\r\n      .then(\r\n        (data) => {\r\n          if(data.success === 1){\r\n            //console.log(data);\r\n            this.setState({\r\n              member: data\r\n            });\r\n\r\n            if( this.state.rememberMe ){\r\n              localStorage.setItem( 'member', JSON.stringify(this.state.member) );\r\n            }\r\n            else{\r\n              localStorage.clear();\r\n            }\r\n          }\r\n          else{\r\n            this.setState({\r\n              apiError:{\r\n                getUser:true\r\n              }\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            fetchError: {\r\n              getUser: true\r\n            }\r\n          });\r\n        }\r\n      )\r\n      .catch(console.error);\r\n  }\r\n\r\n  getWeather(routeList, routeListIndex){\r\n    //API documentation: https://www.weather.gov/documentation/services-web-api\r\n    if(routeListIndex > routeList.length-1){\r\n      return;\r\n    }\r\n\r\n    let lat=routeList[routeListIndex].latitude;\r\n    let lon = routeList[routeListIndex].longitude;\r\n\r\n    let fetchString = 'https://api.weather.gov/points/' + lat + ',' + lon;\r\n    \r\n    fetch(fetchString)\r\n      .then(res => res.json())\r\n      .then(\r\n        (data) => {\r\n          fetch(data.properties.forecast)\r\n            .then( res=> res.json())\r\n            .then(\r\n              (data) => {\r\n                routeList[routeListIndex].weather = data.properties.periods;\r\n                console.log(routeListIndex);\r\n                this.getWeather(routeList, routeListIndex+1);\r\n              },\r\n              (error) => {\r\n                this.setState({\r\n                  fetchError: {\r\n                    weather: true\r\n                  }\r\n                });\r\n              }\r\n            )\r\n            .catch(console.error);\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              fetchError: {\r\n                weather: true\r\n              }\r\n            });\r\n          }\r\n      )\r\n      .catch(console.error);\r\n  }\r\n\r\n              \r\n  getClimbs(){\r\n    //get the users ticks\r\n    console.log(\"getting ticks\");\r\n    fetch('https://www.mountainproject.com/data/get-ticks?email=' + this.state.email + '&key=' + this.state.apiKey)\r\n      .then(res => res.json())\r\n      .then(\r\n        (data) => {\r\n            if (data.success === 1){\r\n              var tickList = data.ticks; //we will need this later to remove boulders the user has already ticked\r\n\r\n              //get the route data from the ticks\r\n              //generate the fetch url\r\n              var fetchString = 'https://www.mountainproject.com/data/get-routes?routeIds=';\r\n              for (let i=0; i<data.ticks.length; i++){\r\n                fetchString += data.ticks[i].routeId + ',';\r\n              }\r\n              //remove extra comma\r\n              fetchString = fetchString.substring(0, fetchString.length - 1);\r\n              fetchString += '&key=' + this.state.apiKey;\r\n              \r\n              console.log(\"getting tick route data\");\r\n              fetch(fetchString)\r\n                .then(res => res.json())\r\n                .then(\r\n                  (data) => {\r\n                    if (data.success === 1) {\r\n                     \r\n                      //this connectes to the form, if the user chooses 'Find my grade' then the choice\r\n                      //will default to -1.\r\n                      //we don't have to calculate grade if the user already input their desired grades in the form\r\n                      if( this.state.flashGrade === -1 || this.state.projectGrade === -1){\r\n                        //generate grade estimations for bouldering\r\n                        var gradeArray = new Array(18).fill(0);\r\n                        \r\n                        for(let i=0; i<data.routes.length; i++){\r\n                          if( data.routes[i].type.includes(\"Boulder\") ){ //some climbs will be listed as both TR (top rope) and boulder for high balls\r\n                            var gradeStart = data.routes[i].rating.indexOf(\"V\",0); //get the index of the [V] in V13\r\n                            var grade = data.routes[i].rating.substring( (gradeStart+1), (gradeStart+3) ); //get the grade [13] in V13\r\n                            var gradeInt = parseInt(grade); //parse the string into an int. for grades < 10, the result from V3 = '3 ' so we parse to remove the space and resolve type errors\r\n\r\n                            //parseInt will parse VB to NaN so we will round that up to V0. I mean those are basically the same grade.\r\n                            if (isNaN(gradeInt)){\r\n                              gradeInt = 0;\r\n                            }\r\n                            \r\n                            gradeArray[gradeInt] += 1;\r\n                          }\r\n                        }\r\n                        //console.log(gradeArray);  \r\n                        \r\n                        //see construction for grade ranges\r\n                        var mostGrade = 0;\r\n                        var highestGrade = 0;\r\n                        for(let i=0; i < gradeArray.length; i++){\r\n                          if(gradeArray[i] > gradeArray[mostGrade]){\r\n                            mostGrade = i;\r\n                          }\r\n                          if(gradeArray[i] !== 0){\r\n                            highestGrade = i;\r\n                          }\r\n                        }\r\n                        \r\n                        if (this.state.flashGrade === -1){\r\n                          this.setState({ flashGrade: mostGrade });\r\n                        }\r\n                        if(this.state.projectGrade === -1){\r\n                          this.setState({ projectGrade: highestGrade + 1 })\r\n                        }\r\n                      }\r\n                      \r\n\r\n                      //now that we have a recommended grade range, we can get a list of grades in that range\r\n                      //this will be done using get-routes-for-lat-lon\r\n                      //most variables for this fetch string will be coming from a form\r\n                      fetchString = \"https://www.mountainproject.com/data/get-routes-for-lat-lon?\"\r\n                        + \"lat=\" + this.state.lat + \"&lon=\" + this.state.lon\r\n                        + \"&maxDistance=\" + this.state.distance\r\n                        + \"&maxResults=\" + this.state.maxResults //perhaps give an option to return more boulders later\r\n                        + \"&minDiff=V\" + (this.state.flashGrade)\r\n                        + \"&maxDiff=V\" + (this.state.projectGrade)\r\n                        + \"&key=\" + this.state.apiKey;\r\n                      \r\n                      console.log(\"getting routes from lat lon\");\r\n                      //get-routes-for-lat-lon returns only the highest rated climbs\r\n                      fetch(fetchString)\r\n                        .then(res => res.json())\r\n                        .then(\r\n                          (data) => {\r\n                            if (data.success === 1){\r\n                              \r\n                              let tickListIdSet = new Set();\r\n                              for(let i=0; i<tickList.length; i++){\r\n                                tickListIdSet.add(tickList[i].routeId);\r\n                              }\r\n                              console.log(tickListIdSet);\r\n                            \r\n                              //we don't need to remove non-boulder problems because routes-for-lat-lon can sort by boulders using minDiff & maxDiff\r\n                              for(let i=data.routes.length-1; i>=0; i--){\r\n                                //remove climbs that were already ticked\r\n                                if( tickListIdSet.has( data.routes[i].id) ){\r\n                                  data.routes.splice(i,1);\r\n                                }\r\n                                \r\n                                // swap the V grade and YDS grade position\r\n                                else if( data.routes[i].rating.includes(\"5.\") ){\r\n                                   let ratingArr = data.routes[i].rating.split(\" \");\r\n                                   if( ratingArr.length >= 1 ){\r\n                                     let swp = ratingArr[0];\r\n                                     ratingArr[0] = ratingArr[1];\r\n                                     ratingArr[1] = swp;\r\n                                   }\r\n                                   data.routes[i].rating = ratingArr.join().replace(/,/g, ' ');\r\n                                }\r\n                              }\r\n\r\n                              \r\n                              var dataRouteList = data.routes;\r\n                              //we still need to cross references this list with the to-do list so that the user can be notified if a climb is on their to-do list                              \r\n                              fetch('https://www.mountainproject.com/data/get-to-dos?email=' + this.state.email + '&key=' + this.state.apiKey)\r\n                                .then(res=>res.json())\r\n                                .then(\r\n                                  (data) => {\r\n                                    if (data.success === 1){\r\n                                      \r\n                                      //put the toDo list into a set for faster checking\r\n                                      let toDoSet = new Set();\r\n                                      for(let i=0; i<data.toDos.length; i++){\r\n                                        toDoSet.add(data.toDos[i]);\r\n                                      }\r\n\r\n                                      //add a new var to the object that denotes if it is or is not on the user's todo list\r\n                                      for(let i=0; i<dataRouteList.length; i++ ){\r\n                                        if( toDoSet.has( dataRouteList[i].id ) ){\r\n                                          dataRouteList[i].toDo = true;\r\n                                        }\r\n                                        else{\r\n                                          dataRouteList[i].toDo = false;\r\n                                        }\r\n\r\n                                      }\r\n                                      \r\n\r\n                                      //this is the final array we need!\r\n                                      this.setState({recList:dataRouteList});\r\n                                      console.log(this.state.recList);\r\n                                      if( this.state.rememberMe ){\r\n                                        localStorage.setItem( 'recList', JSON.stringify(this.state.recList) );\r\n                                        localStorage.setItem( 'flashGrade', this.state.flashGrade );\r\n                                        localStorage.setItem( 'projectGrade', this.state.projectGrade );\r\n                                      }\r\n                                      else{\r\n                                        localStorage.clear();\r\n                                      }\r\n\r\n\r\n////---------------------------------->\r\n                                      //after after all data is loaded, go to the new tab\r\n                                      //enable tab1 navigation after data is retrieved\r\n                                      this.setState({ \r\n                                        currentTab : 1,\r\n                                        haveResults: true,\r\n                                        loading: false,\r\n                                      });\r\n                                  }\r\n                                  else{\r\n                                    this.setState({\r\n                                      apiError:{\r\n                                        getToDos:true\r\n                                      }\r\n                                    });\r\n                                    console.error(this.state.apiError);\r\n                                  }\r\n                                },\r\n                                (error)=> {\r\n                                  this.setState({\r\n                                    fetchError:{\r\n                                      getToDos:true\r\n                                    }\r\n                                  });\r\n                                  console.error(this.state.fetchError);\r\n                                }\r\n                              )\r\n                              .catch(console.error);\r\n\r\n                            }\r\n                            else{\r\n                              this.setState({\r\n                                apiError:{\r\n                                  getRoutesForLatLon:true\r\n                                }\r\n                              });\r\n                              console.error(this.state.apiError);\r\n                            }\r\n                          },\r\n                          (error)=> {\r\n                            this.setState({\r\n                              fetchError:{\r\n                                getRoutesForLatLon:true\r\n                              }\r\n                            });\r\n                            console.error(this.state.fetchError);\r\n                          }\r\n                        )\r\n                        .catch(console.error);\r\n                    }\r\n                    \r\n                    else {\r\n                      this.setState({\r\n                        apiError:{\r\n                          getRoutes: true\r\n                        }\r\n                      });\r\n                      console.error(this.state.apiError);\r\n                    }\r\n                  },\r\n                  (error)=> {\r\n                    this.setState({\r\n                      fetchError:{\r\n                        getRoutes:true\r\n                      }\r\n                    });\r\n                    console.error(this.state.fetchError);\r\n                  }\r\n                )\r\n                .catch(console.error);\r\n            }\r\n            \r\n            else{\r\n              this.setState({\r\n                apiError:{\r\n                  getTicks: true\r\n                }\r\n              });\r\n              console.error(this.state.apiError);\r\n            }    \r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            fetchError:{\r\n              getTicks:true\r\n            }\r\n          });\r\n          console.error(this.state.fetchError);\r\n        }\r\n      )\r\n      .catch(console.error);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <IconTabs\r\n          value={this.state.currentTab}\r\n          handleChange={this.handleChangeTab}\r\n          hideTab0={false}\r\n          tab0={\r\n            <Grid\r\n              container\r\n              spacing={0}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              style={{ minHeight: '60vh' }}\r\n            >\r\n              <Grid item>\r\n                <FormikForm\r\n                  handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                {this.state.loading && <LoadingSpinner/>}\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          \r\n          //tab1 will be disabled until a search is put in\r\n          //show results=false; hideTab=true\r\n          hideTab1={!this.state.haveResults}          \r\n          tab1={ \r\n            <div>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <RouteTable\r\n                    member={this.state.member}\r\n\r\n                    projectGrade={this.state.projectGrade}\r\n                    flashGrade={this.state.flashGrade}\r\n                    \r\n                    align=\"justify\"\r\n                    recList={this.state.recList}\r\n                    page={this.state.currentPage}\r\n                    handleChangePage={this.handleChangePage}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    handleChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n        \r\n    \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app'; \r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\n\r\nconst theme = createMuiTheme({\r\n  typography:{\r\n    fontFamily: 'Segoe UI, -apple-system',\r\n  },\r\n  palette:{\r\n    primary: {\r\n      main: blueGrey[700],\r\n    },\r\n    secondary: {\r\n      main: deepPurple[400],\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst Root = (props) => {\r\n  return(\r\n      <React.Fragment>\r\n        <CssBaseline/>\r\n          <ThemeProvider theme={theme}>\r\n            <App/>\r\n          </ThemeProvider>\r\n      </React.Fragment>\r\n  );\r\n}\r\n  \r\n\r\n\r\nReactDOM.render(<Root/>, document.getElementById('root'));\r\n"],"sourceRoot":""}